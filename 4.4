using System;

namespace _4._4
{
    class Program
    {
        static void Main()
        {
            int playerX;
            int playerY;
            int playerDX = 0;
            int playerDY = 0;
            char[,] map = ReadMap(out playerX, out playerY);

            DrawMap(map);

            while(map[playerX, playerY] != 'X')
            {
                ChangeDirection(map, ref playerX, ref playerY,ref playerDX, ref playerDY);
            }
        }

        static char[,] ReadMap(out int X, out int Y)
        {
            X = 0;
            Y = 0;
            Console.CursorVisible = false;

            char[,] map =
            {
               {'@','@','@','@','@','@','@','@','@','@','@','@',},
               {'@',' ',' ',' ',' ',' ',' ',' ',' ',' ','X','@',},
               {'@','@',' ',' ',' ',' ',' ',' ',' ',' ','@','@',},
               {'@','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','@',},
               {'@','@','@','@','@','@','@','@','@','@','@','@',}
            };

            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    if (map[i, j] == '#')
                    {
                        X = i;
                        Y = j;
                    }
                }
            }
            return map;
        }
        static void DrawMap(char[,] map)
        {
            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);
                }
                Console.WriteLine();
            }
        }

        static void ChangeDirection(char[,] map, ref int positionX, ref int positionY,ref int directionX, ref int directionY)
        {
            ConsoleKeyInfo charKey = Console.ReadKey();

            switch (charKey.Key)
            {
                case ConsoleKey.UpArrow:
                    directionX = -1; directionY = 0;
                    break;
                case ConsoleKey.DownArrow:
                    directionX = 1; directionY = 0;
                    break;
                case ConsoleKey.LeftArrow:
                    directionX = 0; directionY = -1;
                    break;
                case ConsoleKey.RightArrow:
                    directionX = 0; directionY = 1;
                    break;
            }

            if(map[positionX + directionX, positionY + directionY] != '@')
            {
                Move(ref positionX, ref positionY, ref directionX, ref directionY);
            }
        }
        static void Move(ref int positionX, ref int positionY, ref int directionX, ref int directionY)
        {
            Console.SetCursorPosition(positionY, positionX);
            Console.Write(" ");
            positionX += directionX;
            positionY += directionY;
            Console.SetCursorPosition(positionY, positionX);
            Console.Write("#");
        }
    }
}
